#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zadanie2
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ksiazka")]
	public partial class KsiazkiLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKsiazki(Ksiazki instance);
    partial void UpdateKsiazki(Ksiazki instance);
    partial void DeleteKsiazki(Ksiazki instance);
    #endregion
		
		public KsiazkiLinqDataContext() : 
				base(global::Zadanie2.Properties.Settings.Default.KsiazkaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KsiazkiLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KsiazkiLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KsiazkiLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KsiazkiLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ksiazki> Ksiazkis
		{
			get
			{
				return this.GetTable<Ksiazki>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ZwiekszSprzedane10")]
		public int ZwiekszSprzedane10()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ksiazki")]
	public partial class Ksiazki : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _tytul;
		
		private string _autor;
		
		private string _wydawnictwo;
		
		private System.DateTime _rokWydania;
		
		private int _sprzedanych;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OntytulChanging(string value);
    partial void OntytulChanged();
    partial void OnautorChanging(string value);
    partial void OnautorChanged();
    partial void OnwydawnictwoChanging(string value);
    partial void OnwydawnictwoChanged();
    partial void OnrokWydaniaChanging(System.DateTime value);
    partial void OnrokWydaniaChanged();
    partial void OnsprzedanychChanging(int value);
    partial void OnsprzedanychChanged();
    #endregion
		
		public Ksiazki()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tytul", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tytul
		{
			get
			{
				return this._tytul;
			}
			set
			{
				if ((this._tytul != value))
				{
					this.OntytulChanging(value);
					this.SendPropertyChanging();
					this._tytul = value;
					this.SendPropertyChanged("tytul");
					this.OntytulChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autor", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string autor
		{
			get
			{
				return this._autor;
			}
			set
			{
				if ((this._autor != value))
				{
					this.OnautorChanging(value);
					this.SendPropertyChanging();
					this._autor = value;
					this.SendPropertyChanged("autor");
					this.OnautorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wydawnictwo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string wydawnictwo
		{
			get
			{
				return this._wydawnictwo;
			}
			set
			{
				if ((this._wydawnictwo != value))
				{
					this.OnwydawnictwoChanging(value);
					this.SendPropertyChanging();
					this._wydawnictwo = value;
					this.SendPropertyChanged("wydawnictwo");
					this.OnwydawnictwoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rokWydania", DbType="DateTime NOT NULL")]
		public System.DateTime rokWydania
		{
			get
			{
				return this._rokWydania;
			}
			set
			{
				if ((this._rokWydania != value))
				{
					this.OnrokWydaniaChanging(value);
					this.SendPropertyChanging();
					this._rokWydania = value;
					this.SendPropertyChanged("rokWydania");
					this.OnrokWydaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sprzedanych", DbType="Int NOT NULL")]
		public int sprzedanych
		{
			get
			{
				return this._sprzedanych;
			}
			set
			{
				if ((this._sprzedanych != value))
				{
					this.OnsprzedanychChanging(value);
					this.SendPropertyChanging();
					this._sprzedanych = value;
					this.SendPropertyChanged("sprzedanych");
					this.OnsprzedanychChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
